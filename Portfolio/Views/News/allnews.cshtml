@model IEnumerable<Portfolio.Models.News>

@{
    ViewData["Title"] = "News";
}

<div class="container-fluid page-wrapper mt-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="page-title text-gradient">@ViewData["Title"]</h1>
        </div>
    </div>

    <!-- Search -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card card-glass shadow-glass">
                <div class="card-body">
                    <input type="text" id="searchInput" class="form-control form-control-glass" placeholder="Search News...">
                </div>
            </div>
        </div>
    </div>

    <!-- News as Cards -->
    <div class="row g-4" id="newsContainer">
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <div class="col-sm-6 col-md-4 col-lg-3 news-card">
                    <div class="card card-glass shadow-glass h-100 hover-lift position-relative"
                         style="cursor: pointer;"
                         onclick="window.location='@Url.Action("Details", "News", new { id = item.NewsId })'">

                        <!-- Cover Image -->
                        @if (!string.IsNullOrEmpty(item.CoverImageUrl))
                        {
                            <img src="@item.CoverImageUrl"
                                 class="card-img-top img-fluid rounded-top"
                                 alt="@item.NewsTitle"
                                 style="height: 180px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="card-img-top bg-gradient d-flex align-items-center justify-content-center"
                                 style="height: 180px; border-radius: 1rem 1rem 0 0;">
                                <i class="bi bi-newspaper text-white-50 fs-1"></i>
                            </div>
                        }

                        <!-- Content -->
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-gradient">@item.NewsTitle</h5>
                            <p class="text-muted small mb-1">@item.NewsDate.ToString("MMMM dd, yyyy")</p>
                            <p class="card-text text-muted small flex-grow-1">
                                @(item.NewsDescription.Length > 100 ? item.NewsDescription.Substring(0, 100) + "..." : item.NewsDescription)
                            </p>
                            <div class="mt-2">
                                <p class="mb-0"><strong>User:</strong> @(item.User?.UserName ?? "N/A")</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center text-muted">
                <p>No News Found</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const searchInput = document.getElementById("searchInput");
            const cards = document.querySelectorAll(".news-card");

            searchInput.addEventListener("input", function () {
                const term = searchInput.value.toLowerCase();
                cards.forEach(card => {
                    const text = card.textContent.toLowerCase();
                    card.style.display = text.includes(term) ? "" : "none";
                });
            });
        });
    </script>
}
