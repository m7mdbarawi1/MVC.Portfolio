@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    // Get current culture from server
    var currentCulture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name;
    var dir = currentCulture.StartsWith("ar") ? "rtl" : "ltr";
}

<!DOCTYPE html>
<html lang="@currentCulture" dir="@dir">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OBSS</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
    @RenderSection("Head", required: false)
</head>
<body class="d-flex flex-column min-vh-100">
    <!-- Skip to content -->
    <a href="#main-content" class="visually-hidden-focusable">@Localizer["SkipToContent"]</a>

    <!-- Navbar -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary-custom shadow-sm fixed-top" id="mainNavbar">
            <div class="container-fluid">

                <!-- Logo -->
                <a class="navbar-brand d-flex align-items-center" asp-area="" asp-controller="Account" asp-action="HomeRedirect">
                    <img src="~/OBSS-LOGO.png" alt="OBSS Logo" height="40" class="me-2" />
                </a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain"
                        aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <!-- Links -->
                <div class="collapse navbar-collapse" id="navbarMain">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            @if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item"><a class="nav-link" asp-controller="Books" asp-action="Index">@Localizer["Books"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Categories" asp-action="Index">@Localizer["Categories"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Rates" asp-action="Index">@Localizer["Rates"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Carts" asp-action="Index">@Localizer["Carts"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="CartDetails" asp-action="Index">@Localizer["CartDetails"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Sales" asp-action="Index">@Localizer["Sales"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="SalesDetails" asp-action="Index">@Localizer["SalesDetails"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Users" asp-action="Index">@Localizer["Users"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="UserTypes" asp-action="Index">@Localizer["UserTypes"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Books" asp-action="RequiredBooks">@Localizer["RequiredBooks"]</a></li>
                            }
                            else if (User.IsInRole("Customer"))
                            {
                                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index">@Localizer["ExploreBooks"]</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Carts" asp-action="MyCart">@Localizer["MyCart"]</a></li>
                            }
                        }
                    </ul>

                    <!-- Right Side -->
                    <div class="d-flex align-items-center gap-2 flex-wrap">
                        <!-- Theme toggle -->
                        <button id="themeToggle" class="btn btn-outline-light btn-sm" aria-label="Toggle theme">
                            <span id="themeIcon">🌓</span>
                        </button>

                        <!-- Language dropdown -->
                        <div class="dropdown">
                            <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" id="languageDropdown"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                @Localizer["Language"]
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
                                <li>
                                    <form asp-controller="Language" asp-action="SetLanguage" method="post" class="d-inline lang-form">
                                        <input type="hidden" name="culture" value="en-US" />
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                        <button type="submit" class="dropdown-item">@Localizer["English"]</button>
                                    </form>
                                </li>
                                <li>
                                    <form asp-controller="Language" asp-action="SetLanguage" method="post" class="d-inline lang-form">
                                        <input type="hidden" name="culture" value="ar-JO" />
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                        <button type="submit" class="dropdown-item">@Localizer["Arabic"]</button>
                                    </form>
                                </li>
                            </ul>
                        </div>

                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            <!-- User Dropdown -->
                            <div class="dropdown">
                                <a class="btn btn-outline-light btn-sm dropdown-toggle w-100 text-truncate"
                                   href="#" id="userDropdown" role="button"
                                   data-bs-toggle="dropdown" aria-expanded="false">
                                    @User.Identity!.Name
                                    <small class="d-none d-md-inline">(@User.FindFirst(ClaimTypes.Role)?.Value)</small>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end dropdown-menu-responsive"
                                    aria-labelledby="userDropdown">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Account" asp-action="MyProfile">@Localizer["MyProfile"]</a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-controller="Account" asp-action="Logout" method="post" class="px-3">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-danger w-100">@Localizer["Logout"]</button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <a asp-controller="Account" asp-action="Login" class="btn btn-accent btn-sm">@Localizer["Login"]</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <!-- Main -->
    <main id="main-content" class="flex-grow-1 container-fluid py-4">
        <div class="row">
            <div class="col-12">
                @RenderBody()
            </div>
        </div>
    </main>

    <!-- Chatbot Floating Button -->
    <div id="chatbot-container">
        <button id="chatbot-toggle" class="btn btn-primary rounded-circle shadow-lg">
            <i id="chatbot-icon" class="bi bi-chat-dots"></i>
        </button>

        <div id="chatbot-box" class="card shadow-lg p-3" style="display:none;">
            <div class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-2">
                <h6 class="mb-0">@Localizer["Chatbot"]</h6>
                <button id="chatbot-close" class="btn btn-sm btn-outline-secondary">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            <div id="chatbot-messages" class="chat-messages mb-3"></div>
            <div class="input-group">
                <input type="text" id="chatbot-input" class="form-control" placeholder="@Localizer["TypeMessage"]..." />
                <button id="chatbot-send" class="btn btn-primary">
                    <i class="bi bi-send"></i>
                </button>
            </div>
        </div>
    </div>


    <footer class="footer-custom mt-auto pt-5 pb-3">
        <div class="container">
            <div class="row g-4 justify-content-center text-center">

                <!-- Follow Us / Social Media -->
                <div class="col-md-4 d-flex flex-column align-items-center">
                    <h5 class="fw-bold">@Localizer["FollowUs"]</h5>
                    <div class="d-flex gap-3 mt-3">
                        <!-- LinkedIn -->
                        <a href="https://www.linkedin.com/in/mohammadbarawi/" target="_blank" class="text-decoration-none social-icon">
                            <i class="bi bi-linkedin"></i>
                        </a>
                        <!-- Instagram -->
                        <a href="https://www.instagram.com/yourprofile" target="_blank" class="text-decoration-none social-icon">
                            <i class="bi bi-instagram"></i>
                        </a>
                        <!-- YouTube -->
                        <a href="https://www.youtube.com/yourchannel" target="_blank" class="text-decoration-none social-icon">
                            <i class="bi bi-youtube"></i>
                        </a>
                    </div>
                    <p class="small mt-2">@Localizer["ConnectWithUs"]</p>
                </div>

                <!-- Who We Are -->
                <div class="col-md-3 d-flex flex-column align-items-center">
                    <h6 class="fw-bold">@Localizer["WhoWeAre"]</h6>
                    <ul class="list-unstyled mt-3 text-center">
                        <li><a href="/Home/AboutUs" class="footer-link">@Localizer["AboutUs"]</a></li>
                        <li><a href="/Home/Careers" class="footer-link">@Localizer["Careers"]</a></li>
                    </ul>
                    </ul>
                </div>

                <!-- Offices -->
                <div class="col-md-3 d-flex flex-column align-items-center">
                    <h6 class="fw-bold">@Localizer["Offices"]</h6>
                    <p class="small mt-3 mb-1">@Localizer["OfficesLocation"]</p>
                    <p class="small mb-2">@Localizer["OfficesPhone"]<br />Wasfi Al Tal St, Amman</p>
                </div>
            </div>
        </div>
    </footer>


    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Adjust body padding dynamically
        document.addEventListener('DOMContentLoaded', () => {
            function adjustBodyPadding() {
                const nav = document.getElementById('mainNavbar');
                if (nav) {
                    document.body.style.paddingTop = nav.offsetHeight + 'px';
                }
            }
            adjustBodyPadding();
            window.addEventListener('resize', adjustBodyPadding);
        });
    </script>

    <script>
        // Dark/Light mode toggle
        document.addEventListener('DOMContentLoaded', function () {
            const rootEl = document.documentElement;
            const bodyEl = document.body;
            const toggleBtn = document.getElementById('themeToggle');
            const themeIcon = document.getElementById('themeIcon');

            function initTheme() {
                const savedTheme = localStorage.getItem('theme');
                const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                const defaultTheme = systemPrefersDark ? 'dark' : 'light';
                const theme = savedTheme || defaultTheme;
                setTheme(theme);
            }

            function setTheme(theme) {
                rootEl.classList.remove('light-theme', 'dark-theme');
                bodyEl.classList.remove('light-theme', 'dark-theme');
                rootEl.classList.add(theme + '-theme');
                bodyEl.classList.add(theme + '-theme');
                if (themeIcon) {
                    themeIcon.textContent = theme === 'dark' ? '🌙' : '☀️';
                }
                localStorage.setItem('theme', theme);
            }

            toggleBtn?.addEventListener('click', function () {
                const currentTheme = rootEl.classList.contains('dark-theme') ? 'dark' : 'light';
                setTheme(currentTheme === 'dark' ? 'light' : 'dark');
            });

            initTheme();
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const toggleBtn = document.getElementById('chatbot-toggle');
            const chatBox = document.getElementById('chatbot-box');
            const closeBtn = document.getElementById('chatbot-close');
            const sendBtn = document.getElementById('chatbot-send');
            const input = document.getElementById('chatbot-input');
            const messages = document.getElementById('chatbot-messages');
            const icon = document.getElementById('chatbot-icon');

            // Open/Close chatbot
            toggleBtn.addEventListener('click', () => {
                chatBox.style.display = chatBox.style.display === 'none' ? 'block' : 'none';
                icon.classList.toggle('bi-chat-dots');
                icon.classList.toggle('bi-x-circle');
            });

            closeBtn.addEventListener('click', () => {
                chatBox.style.display = 'none';
                icon.classList.add('bi-chat-dots');
                icon.classList.remove('bi-x-circle');
            });

            // Send message
            function addMessage(sender, text) {
                const div = document.createElement('div');
                div.classList.add('chat-message', sender);
                div.textContent = text;
                messages.appendChild(div);
                messages.scrollTop = messages.scrollHeight;
            }

            function sendMessage() {
                const text = input.value.trim();
                if (!text) return;
                addMessage('user', text);
                input.value = '';
                setTimeout(() => addMessage('bot', "🤖 " + "Hello Dear! How can I help you?"), 400);
            }

            sendBtn.addEventListener('click', sendMessage);
            input.addEventListener('keypress', e => {
                if (e.key === 'Enter') sendMessage();
            });
        });
    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
