@using System.Security.Claims
@using Microsoft.EntityFrameworkCore

@{
    var currentCulture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name;
    var dir = currentCulture.StartsWith("ar") ? "rtl" : "ltr";
}

<!DOCTYPE html>
<html lang="@currentCulture" dir="@dir">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Portfolio</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
    @RenderSection("Head", required: false)
</head>
<body class="d-flex flex-column min-vh-100">
    <a href="#main-content" class="visually-hidden-focusable">Skip to Content</a>

    <!-- Navbar -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-glass fixed-top" id="mainNavbar">
            <div class="container-fluid">
                <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index">
                    <img src="~/FB_IMG_1727620553061.jpg" alt="OBSS Logo" height="40" class="me-2" />
                </a>

                <button class="navbar-toggler glass-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain"
                        aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
                    <i class="bi bi-list fs-2 text-gradient"></i>
                </button>

                <div class="collapse navbar-collapse" id="navbarMain">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            <li class="nav-item"><a class="nav-link glass-nav-link" asp-controller="Services" asp-action="Index">Services</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" asp-controller="ServiceCategories" asp-action="Index">Service Categories</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" asp-controller="Projects" asp-action="Index">Projects</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" asp-controller="ProjectCategories" asp-action="Index">Project Categories</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" asp-controller="Documents" asp-action="Index">Documents</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" asp-controller="Documents" asp-action="Index">News</a></li>
                        }
                        else
                        {
                            <!-- Guest users: scroll sections -->
                            <li class="nav-item"><a class="nav-link glass-nav-link" href="#services">Services</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" href="#projects">Projects</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" href="#documents">Documents</a></li>
                            <li class="nav-item"><a class="nav-link glass-nav-link" href="#news">News</a></li>
                        }
                    </ul>

                    <div class="d-flex align-items-center gap-3 flex-wrap">
                        <!-- Theme toggle -->
                        <button id="themeToggle" class="btn btn-glass btn-sm rounded-pill" aria-label="Toggle theme">
                            <i class="bi bi-sun-fill theme-icon"></i>
                        </button>

                        <!-- Language dropdown -->
                        <div class="dropdown">
                            <button class="btn btn-glass btn-sm dropdown-toggle rounded-pill" type="button" id="languageDropdown"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-translate me-1"></i>Language
                            </button>

                            <ul class="dropdown-menu dropdown-menu-language dropdown-menu-end" aria-labelledby="languageDropdown">
                                <li>
                                    <form asp-controller="Language" asp-action="SetLanguage" method="post" class="d-inline lang-form">
                                        <input type="hidden" name="culture" value="en-US" />
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                        <button type="submit" class="dropdown-item"><i class="bi bi-flag-fill me-2"></i>English</button>
                                    </form>
                                </li>
                                <li>
                                    <form asp-controller="Language" asp-action="SetLanguage" method="post" class="d-inline lang-form">
                                        <input type="hidden" name="culture" value="ar-JO" />
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                        <button type="submit" class="dropdown-item"><i class="bi bi-flag-fill me-2"></i>Arabic</button>
                                    </form>
                                </li>
                            </ul>
                        </div>

                        <!-- Authentication -->
                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            <div class="dropdown">
                                <a class="btn btn-glass btn-sm dropdown-toggle w-100 text-truncate rounded-pill"
                                   href="#" id="userDropdown" role="button"
                                   data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-person-circle me-1"></i>@User.Identity!.Name
                                </a>
                                <ul class="dropdown-menu dropdown-menu-glass dropdown-menu-end dropdown-menu-responsive" aria-labelledby="userDropdown">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Account" asp-action="MyProfile">
                                            <i class="bi bi-person me-2"></i>My Profile
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-controller="Account" asp-action="Logout" method="post" class="px-3">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-glass-danger w-100 rounded-pill">
                                                <i class="bi bi-box-arrow-right me-1"></i>Logout
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <a asp-controller="Account" asp-action="Login" class="btn btn-glass-accent btn-sm rounded-pill">
                                <i class="bi bi-box-arrow-in-right me-1"></i>Login
                            </a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <!-- Main -->
    <main id="main-content" class="flex-grow-1 container-fluid py-4">
        <div class="row">
            <div class="col-12">
                @RenderBody()
            </div>
        </div>
    </main>

    <!-- Chatbot Floating Button -->
    <div id="chatbot-container">
        <button id="chatbot-toggle" class="btn btn-glass-chat rounded-circle shadow-lg">
            <i id="chatbot-icon" class="bi bi-robot"></i>
        </button>
        <div id="chatbot-box" class="card card-glass p-3" style="display:none;">
            <div class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-2">
                <h6 class="mb-0 text-gradient"><i class="bi bi-robot me-2"></i>AI Assistant</h6>
                <button id="chatbot-close" class="btn btn-sm btn-glass rounded-circle">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            <div id="chatbot-messages" class="chat-messages mb-3"></div>
            <div class="input-group">
                <input type="text" id="chatbot-input" class="form-control form-control-glass" placeholder="Ask me anything..." />
                <button id="chatbot-send" class="btn btn-glass-accent rounded-end">
                    <i class="bi bi-send"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="footer-glass mt-auto pt-5 pb-3">
        <div class="container">
            <div class="row g-4 justify-content-center text-center">
                <div class="col-md-4 d-flex flex-column align-items-center">
                    <h5 class="fw-bold text-gradient">Follow Me</h5>
                    <div class="d-flex gap-3 mt-3">
                        <a href="https://www.linkedin.com/in/mohammadbarawi/" target="_blank" class="social-icon-glass">
                            <i class="bi bi-linkedin"></i>
                        </a>
                        <a href="https://www.instagram.com/yourprofile" target="_blank" class="social-icon-glass">
                            <i class="bi bi-instagram"></i>
                        </a>
                        <a href="https://www.youtube.com/yourchannel" target="_blank" class="social-icon-glass">
                            <i class="bi bi-youtube"></i>
                        </a>
                    </div>
                </div>

                <div class="col-md-3 d-flex flex-column align-items-center">
                    <h6 class="fw-bold text-gradient">Policies</h6>
                    <ul class="list-unstyled mt-3 text-center">
                        <li><a class="footer-link-glass" asp-controller="Home" asp-action="copyright">Copy right</a></li>
                    </ul>
                </div>

                <div class="col-md-3 d-flex flex-column align-items-center">
                    <h6 class="fw-bold text-gradient">Contact info</h6>
                    <p class="small mt-3 mb-1">Email: m7mdbarawi@gmail.com</p>
                    <p class="small mb-2">Phone: +962795669598</p>
                </div>
            </div>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Navbar height management
        document.addEventListener('DOMContentLoaded', () => {
            const nav = document.getElementById('mainNavbar');
            if (nav) {
                const navbarHeight = nav.offsetHeight;
                document.documentElement.style.setProperty('--navbar-height', `${navbarHeight}px`);
                document.body.style.paddingTop = `${navbarHeight}px`;
            }

            window.addEventListener('resize', () => {
                if (nav) {
                    const navbarHeight = nav.offsetHeight;
                    document.documentElement.style.setProperty('--navbar-height', `${navbarHeight}px`);
                    document.body.style.paddingTop = `${navbarHeight}px`;
                }
            });
        });

        // Enhanced smooth scrolling for navbar links
        document.addEventListener('DOMContentLoaded', function() {
            const navLinks = document.querySelectorAll('.navbar-nav a[href^="#"]');

            navLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();

                    const targetId = this.getAttribute('href');
                    const targetElement = document.querySelector(targetId);

                    if (targetElement) {
                        // Close mobile navbar if open
                        const navbarCollapse = document.getElementById('navbarMain');
                        if (navbarCollapse.classList.contains('show')) {
                            const bsCollapse = new bootstrap.Collapse(navbarCollapse);
                            bsCollapse.hide();
                        }

                        // Use native smooth scroll with CSS offset
                        targetElement.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });
        });

        // Theme toggle functionality
        document.addEventListener('DOMContentLoaded', function () {
            const rootEl = document.documentElement;
            const bodyEl = document.body;
            const toggleBtn = document.getElementById('themeToggle');
            const themeIcon = document.querySelector('.theme-icon');

            function setTheme(theme) {
                rootEl.classList.remove('light-theme', 'dark-theme');
                bodyEl.classList.remove('light-theme', 'dark-theme');
                rootEl.classList.add(theme + '-theme');
                bodyEl.classList.add(theme + '-theme');

                if (themeIcon) {
                    themeIcon.className = theme === 'dark' ? 'bi bi-moon-fill theme-icon' : 'bi bi-sun-fill theme-icon';
                }
                localStorage.setItem('theme', theme);
            }

            function initTheme() {
                const savedTheme = localStorage.getItem('theme');
                const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                setTheme(savedTheme || (systemPrefersDark ? 'dark' : 'light'));
            }

            toggleBtn?.addEventListener('click', () => {
                const currentTheme = rootEl.classList.contains('dark-theme') ? 'dark' : 'light';
                setTheme(currentTheme === 'dark' ? 'light' : 'dark');
            });

            initTheme();
        });

        // Chatbot functionality
        document.addEventListener('DOMContentLoaded', () => {
            const toggleBtn = document.getElementById('chatbot-toggle');
            const chatBox = document.getElementById('chatbot-box');
            const closeBtn = document.getElementById('chatbot-close');
            const sendBtn = document.getElementById('chatbot-send');
            const input = document.getElementById('chatbot-input');
            const messages = document.getElementById('chatbot-messages');
            const icon = document.getElementById('chatbot-icon');

            toggleBtn.addEventListener('click', () => {
                const isVisible = chatBox.style.display === 'block';
                chatBox.style.display = isVisible ? 'none' : 'block';
                chatBox.classList.toggle('chatbox-open', !isVisible);
                icon.className = isVisible ? 'bi bi-robot' : 'bi bi-x-lg';

                if (!isVisible) {
                    input.focus();
                }
            });

            closeBtn.addEventListener('click', () => {
                chatBox.style.display = 'none';
                chatBox.classList.remove('chatbox-open');
                icon.className = 'bi bi-robot';
            });

            function addMessage(sender, text) {
                const div = document.createElement('div');
                div.classList.add('chat-message', sender);

                const time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                div.innerHTML = `
                    <div class="message-content">${text}</div>
                    <div class="message-time">${time}</div>
                `;

                messages.appendChild(div);
                messages.scrollTop = messages.scrollHeight;
            }

            function sendMessage() {
                const text = input.value.trim();
                if (!text) return;

                addMessage('user', text);
                input.value = '';

                // Simulate bot response
                setTimeout(() => {
                    const responses = [
                        "I'm here to help! How can I assist you today?",
                        "That's a great question! Let me find the best answer for you.",
                        "I understand your query. Here's what I can tell you...",
                        "Thanks for reaching out! Here's some information that might help."
                    ];
                    const randomResponse = responses[Math.floor(Math.random() * responses.length)];
                    addMessage('bot', randomResponse);
                }, 1000 + Math.random() * 2000);
            }

            sendBtn.addEventListener('click', sendMessage);
            input.addEventListener('keypress', e => {
                if (e.key === 'Enter') sendMessage();
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>